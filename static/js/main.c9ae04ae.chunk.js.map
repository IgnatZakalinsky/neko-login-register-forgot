{"version":3,"sources":["neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-1-ui/SignIn.tsx","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInActions.ts","base-url.ts","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-3-dal/SignInAPI.ts","neko-2-features/features-2-helpers/passwordCoding.tsx","neko-2-features/features-3-neko/neko-2-bll/nekoActions.ts","neko-2-features/features-2-helpers/cookies.ts","neko-2-features/features-2-helpers/emailValidator.ts","neko-2-features/features-2-helpers/passwordValidator.ts","neko-2-features/features-3-neko/neko-3-dal/NekoAPI.ts","neko-2-features/features-3-neko/neko-2-bll/nekoThunks.ts","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-1-ui/SignInContainer.tsx","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInThunks.ts","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-1-ui/SignInPage.tsx","neko-2-features/features-1-authorization/authorization-2-register/register-1-ui/Register.tsx","neko-2-features/features-1-authorization/authorization-2-register/register-2-bll/registerActions.ts","neko-2-features/features-1-authorization/authorization-2-register/register-3-dal/RegisterAPI.ts","neko-2-features/features-1-authorization/authorization-2-register/register-1-ui/RegisterContainer.tsx","neko-2-features/features-1-authorization/authorization-2-register/register-2-bll/registerThunks.ts","neko-2-features/features-1-authorization/authorization-2-register/register-1-ui/RegisterPage.tsx","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-1-ui/Forgot.tsx","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-2-bll/forgotActions.ts","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-3-dal/ForgotAPI.ts","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-1-ui/ForgotContainer.tsx","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-2-bll/forgotThunks.ts","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-1-ui/ForgotPage.tsx","neko-2-features/features-3-neko/neko-1-ui/Neko.tsx","neko-2-features/features-3-neko/neko-1-ui/NekoContainer.tsx","neko-2-features/features-3-neko/neko-1-ui/NekoPage.tsx","neko-1-main/main-1-ui/Routes.tsx","neko-1-main/main-1-ui/Header.tsx","neko-1-main/main-1-ui/Main.tsx","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInInitialState.ts","neko-2-features/features-1-authorization/authorization-2-register/register-2-bll/registerInitialState.ts","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-2-bll/forgotInitialState.ts","neko-2-features/features-3-neko/neko-2-bll/nekoInitialState.ts","neko-1-main/main-2-bll/store.ts","neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInReducer.ts","neko-2-features/features-1-authorization/authorization-2-register/register-2-bll/registerReducer.ts","neko-2-features/features-1-authorization/authorization-3-forgot/forgot-2-bll/forgotReducer.ts","neko-2-features/features-3-neko/neko-2-bll/nekoReducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["SignIn","loading","error","success","email","password","rememberMe","signInSetEmailCallback","signInSetPasswordCallback","signInRememberMeCallback","signInCallback","JSON","stringify","style","height","display","flexFlow","alignItems","justifyContent","color","value","onChange","e","currentTarget","to","FORGOT_PATH","type","checked","onClick","REGISTER_PATH","signInError","signInSuccess","baseURL","instance","axios","create","SignInAPI","a","async","post","response","data","passwordCoding","f","c","length","String","fromCharCode","charCodeAt","nekoError","nekoSetName","name","setCookie","age","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","reg","emailValidator","test","passwordValidator","NekoAPI","token","getMe","dispatch","getStore","console","log","message","SignInContainer","useSelector","store","signIn","useDispatch","useState","setEmail","setPassword","setRememberMe","redirect","setRedirect","useEffect","setTimeout","NEKO_PATH","SignInPage","Register","password2","registerSetEmailCallback","registerSetPasswordCallback","registerSetPasswordCallback2","registerCallback","registerError","registerSuccess","RegisterAPI","RegisterContainer","register","setPassword2","SIGN_IN_PATH","RegisterPage","Forgot","forgotSetEmailCallback","forgotCallback","forgotError","forgotSuccess","ForgotAPI","ForgotContainer","forgot","ForgotPage","Neko","logoutCallback","NekoContainer","neko","show","setShow","NekoPage","Routes","exact","path","render","Header","flexWrap","Main","signInInitialState","registerInitialState","forgotInitialState","nekoInitialState","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","className","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9ae04ae.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {FORGOT_PATH, REGISTER_PATH} from \"../../../../neko-1-main/main-1-ui/Routes\";\n\ninterface SignInProps {\n    loading: boolean;\n    error: string;\n    success: boolean;\n\n    email: string;\n    password: string;\n    rememberMe: boolean;\n\n    signInSetEmailCallback: (email: string) => void;\n    signInSetPasswordCallback: (password: string) => void;\n    signInRememberMeCallback: (rememberMe: boolean) => void;\n\n    signInCallback: () => void;\n}\n\nconst SignIn: React.FC<SignInProps> = (\n    {\n        loading,\n        error,\n        success,\n\n        email,\n        password,\n        rememberMe,\n\n        signInSetEmailCallback,\n        signInSetPasswordCallback,\n        signInRememberMeCallback,\n\n        signInCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            sign-in\n\n            {loading\n                ? <div style={{color: 'orange'}}>loading...</div>\n                : error\n                    ? <div style={{color: 'red'}}>{error}</div>\n                    : success\n                        ? <div style={{color: 'lime'}}>Success!</div>\n                        : <div><br/></div>\n            }\n\n            <input value={email} onChange={e => signInSetEmailCallback(e.currentTarget.value)}/>\n            <input value={password} onChange={e => signInSetPasswordCallback(e.currentTarget.value)}/>\n\n            <NavLink to={FORGOT_PATH}>Forgot password?</NavLink>\n\n            <div>\n                <input\n                    type={'checkbox'}\n                    checked={rememberMe}\n                    onChange={e => signInRememberMeCallback(e.currentTarget.checked)}\n                />\n                Remember Me\n            </div>\n            <button onClick={signInCallback}>Sign In</button>\n\n            <NavLink to={REGISTER_PATH}>Registration</NavLink>\n        </div>\n    );\n};\n\nexport default SignIn;\n","export const SIGN_IN_LOADING = 'SIGN_IN/LOADING';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN/ERROR';\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN/SUCCESS';\r\n\r\ninterface ISignInLoading {\r\n    type: typeof SIGN_IN_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface ISignInError {\r\n    type: typeof SIGN_IN_ERROR;\r\n    error: string;\r\n}\r\ninterface ISignInSuccess {\r\n    type: typeof SIGN_IN_SUCCESS;\r\n    success: boolean;\r\n}\r\n\r\nexport type ISignInActions =\r\n    ISignInLoading |\r\n    ISignInError |\r\n    ISignInSuccess;\r\n\r\nexport const signInLoading = (loading: boolean): ISignInLoading => ({\r\n    type: SIGN_IN_LOADING,\r\n    loading,\r\n});\r\nexport const signInError = (error: string): ISignInError => ({\r\n    type: SIGN_IN_ERROR,\r\n    error,\r\n});\r\nexport const signInSuccess = (success: boolean): ISignInSuccess => ({\r\n    type: SIGN_IN_SUCCESS,\r\n    success,\r\n});\r\n\r\n","export const baseURL = 'https://ancient-gorge-20298.herokuapp.com/';\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport interface ISignInData {\r\n    name: string;\r\n    token: string;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const SignInAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<ISignInData>('/auth/login', {email, password, rememberMe});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","export const passwordCoding = (password: string) => {\r\n    let f = '';\r\n    for (let c = 0; c < password.length; c++) {\r\n        f += String.fromCharCode(password.charCodeAt(c) ^ (1 + (password.length - c) % 32));\r\n    }\r\n    return f;\r\n};\r\n","export const NEKO_LOADING = 'NEKO/LOADING';\r\nexport const NEKO_ERROR = 'NEKO/ERROR';\r\n\r\nexport const NEKO_SET_NAME = 'NEKO/SET_NAME';\r\n\r\ninterface INekoLoading {\r\n    type: typeof NEKO_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface INekoError {\r\n    type: typeof NEKO_ERROR;\r\n    error: string;\r\n}\r\n\r\ninterface INekoSetName {\r\n    type: typeof NEKO_SET_NAME;\r\n    name: string;\r\n}\r\n\r\nexport type INekoActions = INekoLoading | INekoError | INekoSetName;\r\n\r\nexport const nekoLoading = (loading: boolean): INekoLoading => ({\r\n    type: NEKO_LOADING,\r\n    loading,\r\n});\r\nexport const nekoError = (error: string): INekoError => ({\r\n    type: NEKO_ERROR,\r\n    error,\r\n});\r\n\r\nexport const nekoSetName = (name: string): INekoSetName => ({\r\n    type: NEKO_SET_NAME,\r\n    name,\r\n});\r\n","export const setCookie = (name: string, value: string, age: number) => {\r\n    document.cookie = `${name}=${value};max-age=${age};path=/`;\r\n};\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n    const matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)'\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n};\r\n","const reg = /^[\\w]{1}[\\w-\\.]*@[\\w-]+\\.[a-z]{2,7}$/i;\r\n\r\nexport const emailValidator = (email: string): boolean => reg.test(email); // true - valid\r\n","export const passwordValidator = (password: string): boolean => password.length > 7; // true - valid\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport interface IGetMeData {\r\n    name: string;\r\n    token: string;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const NekoAPI = {\r\n    getMe: async (token: string) => {\r\n        const response = await instance.post<IGetMeData>('/auth/me', {token});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../neko-1-main/main-2-bll/store\";\r\nimport {INekoActions, nekoError, nekoLoading, nekoSetName} from \"./nekoActions\";\r\nimport {NekoAPI} from \"../neko-3-dal/NekoAPI\";\r\nimport {ISignInActions, signInSuccess} from \"../../features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInActions\";\r\nimport {getCookie, setCookie} from \"../../features-2-helpers/cookies\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const getMe = (): ThunkAction<Return, IAppStore, ExtraArgument, INekoActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, INekoActions | ISignInActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(nekoLoading(true));\r\n        const token = getCookie('token') || '';\r\n\r\n        try {\r\n            const data = await NekoAPI.getMe(token);\r\n            if (data.error) {\r\n                dispatch(nekoError(data.error));\r\n                setCookie('token', '', -1000);\r\n\r\n                console.log('Neko Get Me Error!', data.error, token);\r\n            } else {\r\n                setCookie('token', data.token, 60 * 60 * 48); // 2 days\r\n                dispatch(nekoSetName(data.name));\r\n                dispatch(signInSuccess(true));\r\n\r\n                console.log('Neko Get Me Success!', data.name)\r\n            }\r\n        } catch (e) {\r\n            dispatch(nekoError(e.message));\r\n\r\n            console.log('Neko Get Me Error!', e)\r\n        }\r\n    };\r\n","import React, {useEffect, useState} from 'react';\nimport SignIn from \"./SignIn\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\nimport {signInError, signInSuccess} from \"../sign-in-2-bll/signInActions\";\nimport {signIn} from \"../sign-in-2-bll/signInThunks\";\nimport {emailValidator} from '../../../features-2-helpers/emailValidator';\nimport {passwordValidator} from \"../../../features-2-helpers/passwordValidator\";\nimport {getMe} from \"../../../features-3-neko/neko-2-bll/nekoThunks\";\nimport {Redirect} from \"react-router\";\nimport {NEKO_PATH} from \"../../../../neko-1-main/main-1-ui/Routes\";\n\nconst SignInContainer: React.FC = () => {\n    // redux\n    const {loading, error, success} = useSelector((store: IAppStore) => store.signIn);\n    const dispatch = useDispatch();\n\n    // local state\n    const [email, setEmail] = useState('test@emali.nya');\n    const [password, setPassword] = useState('test password nya');\n    const [rememberMe, setRememberMe] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n\n    // useEffects\n    useEffect(() => {\n        dispatch(getMe());\n    }, []);\n\n    // callbacks\n    const signInCallback = () => {\n        if (!emailValidator(email)) {\n            dispatch(signInError('Email not valid!'));\n        } else if (!passwordValidator(password)) {\n            dispatch(signInError('Password not valid! must be more than 7 characters...'));\n        } else {\n            dispatch(signIn(email, password, rememberMe));\n        }\n    };\n\n    // redirect logic\n    if (success) {\n        setTimeout(() => {\n            setRedirect(true);\n        }, 500);\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(signInSuccess(false))\n        }, 500);\n        return <Redirect to={NEKO_PATH}/>;\n    }\n\n    return (\n        <SignIn\n            loading={loading}\n            error={error}\n            success={success}\n\n            email={email}\n            password={password}\n            rememberMe={rememberMe}\n\n            signInSetEmailCallback={setEmail}\n            signInSetPasswordCallback={setPassword}\n            signInRememberMeCallback={setRememberMe}\n\n            signInCallback={signInCallback}\n        />\n    );\n};\n\nexport default SignInContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\r\nimport {ISignInActions, signInError, signInLoading, signInSuccess} from \"./signInActions\";\r\nimport {SignInAPI} from \"../sign-in-3-dal/SignInAPI\";\r\nimport {passwordCoding} from \"../../../features-2-helpers/passwordCoding\";\r\nimport {INekoActions, nekoSetName} from \"../../../features-3-neko/neko-2-bll/nekoActions\";\r\nimport {setCookie} from \"../../../features-2-helpers/cookies\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const signIn =\r\n    (email: string, password: string, rememberMe: boolean)\r\n        : ThunkAction<Return, IAppStore, ExtraArgument, ISignInActions> =>\r\n        async (\r\n            dispatch: ThunkDispatch<IAppStore, ExtraArgument, ISignInActions | INekoActions>,\r\n            getStore: IGetStore\r\n        ) => {\r\n            dispatch(signInLoading(true));\r\n\r\n            try {\r\n                const data = await SignInAPI.signIn(email, passwordCoding(password), rememberMe);\r\n\r\n                if (data.error) {\r\n                    dispatch(signInError(data.error));\r\n\r\n                } else {\r\n                    dispatch(nekoSetName(data.name));\r\n                    setCookie('token', data.token, 60 * 60 * 48); // 2 days\r\n                    dispatch(signInSuccess(true));\r\n\r\n                    console.log('Neko Sign-in Success!', data)\r\n                }\r\n            } catch (e) {\r\n                dispatch(signInError(e.message));\r\n\r\n                console.log('Neko Sign-in Error!', e)\r\n            }\r\n        };\r\n","import React from 'react';\nimport SignInContainer from \"./SignInContainer\";\n\nconst SignInPage: React.FC = () => {\n    return (\n        <SignInContainer/>\n    );\n};\n\nexport default SignInPage;\n","import React from 'react';\n\ninterface RegisterProps {\n    loading: boolean;\n    error: string;\n    success: boolean;\n\n    email: string;\n    password: string;\n    password2: string;\n\n    registerSetEmailCallback: (email: string) => void;\n    registerSetPasswordCallback: (password: string) => void;\n    registerSetPasswordCallback2: (password: string) => void;\n\n    registerCallback: () => void;\n}\n\nconst Register: React.FC<RegisterProps> = (\n    {\n        loading,\n        error,\n        success,\n\n        email,\n        password,\n        password2,\n\n        registerSetEmailCallback,\n        registerSetPasswordCallback,\n        registerSetPasswordCallback2,\n\n        registerCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            register\n\n            {loading\n                ? <div style={{color: 'orange'}}>loading...</div>\n                : error\n                    ? <div style={{color: 'red'}}>{error}</div>\n                    : success\n                        ? <div style={{color: 'lime'}}>Success!</div>\n                        : <div><br/></div>\n            }\n\n            <input value={email} onChange={e => registerSetEmailCallback(e.currentTarget.value)}/>\n            <input value={password} onChange={e => registerSetPasswordCallback(e.currentTarget.value)}/>\n            <input value={password2} onChange={e => registerSetPasswordCallback2(e.currentTarget.value)}/>\n\n            <button onClick={registerCallback}>Register</button>\n        </div>\n    );\n};\n\nexport default Register;\n","export const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\n\r\ninterface IRegisterLoading {\r\n    type: typeof REGISTER_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface IRegisterError {\r\n    type: typeof REGISTER_ERROR;\r\n    error: string;\r\n}\r\ninterface IRegisterSuccess {\r\n    type: typeof REGISTER_SUCCESS;\r\n    success: boolean;\r\n}\r\n\r\nexport type IRegisterActions =\r\n    IRegisterLoading |\r\n    IRegisterError |\r\n    IRegisterSuccess;\r\n\r\nexport const registerLoading = (loading: boolean): IRegisterLoading => ({\r\n    type: REGISTER_LOADING,\r\n    loading,\r\n});\r\nexport const registerError = (error: string): IRegisterError => ({\r\n    type: REGISTER_ERROR,\r\n    error,\r\n});\r\nexport const registerSuccess = (success: boolean): IRegisterSuccess => ({\r\n    type: REGISTER_SUCCESS,\r\n    success,\r\n});\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport interface IRegisterData {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    register: async (email: string, password: string) => {\r\n        const response = await instance.post<IRegisterData>('/auth/register', {email, password});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\nimport Register from './Register';\nimport {registerError, registerSuccess} from \"../register-2-bll/registerActions\";\nimport {register} from '../register-2-bll/registerThunks';\nimport {emailValidator} from \"../../../features-2-helpers/emailValidator\";\nimport {passwordValidator} from \"../../../features-2-helpers/passwordValidator\";\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/main-1-ui/Routes\";\n\nconst RegisterContainer: React.FC = () => {\n    // redux\n    const {loading, error, success} = useSelector((store: IAppStore) => store.register);\n    const dispatch = useDispatch();\n\n    // local state\n    const [email, setEmail] = useState('test@emali.nya');\n    const [password, setPassword] = useState('test password nya');\n    const [password2, setPassword2] = useState('test password nya2');\n\n    const [redirect, setRedirect] = useState(false);\n\n    // callbacks\n    const registerCallback = () => {\n        if (!emailValidator(email)) {\n            dispatch(registerError('Email not valid!'));\n        } else if (!passwordValidator(password)) {\n            dispatch(registerError('Password not valid! must be more than 7 characters...'));\n        } else if (password !== password2) {\n            dispatch(registerError('Passwords do not match!'));\n        } else {\n            dispatch(register(email, password));\n        }\n    };\n\n    // redirect logic\n    if (success) {\n        setTimeout(() => setRedirect(true), 500)\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(registerSuccess(false))\n        }, 500);\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n\n    return (\n        <Register\n            loading={loading}\n            error={error}\n            success={success}\n\n            email={email}\n            password={password}\n            password2={password2}\n\n            registerSetEmailCallback={setEmail}\n            registerSetPasswordCallback={setPassword}\n            registerSetPasswordCallback2={setPassword2}\n\n            registerCallback={registerCallback}\n        />\n    );\n};\n\nexport default RegisterContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\r\nimport {IRegisterActions, registerError, registerLoading, registerSuccess} from \"./registerActions\";\r\nimport {RegisterAPI} from \"../register-3-dal/RegisterAPI\";\r\nimport {passwordCoding} from \"../../../features-2-helpers/passwordCoding\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const register =\r\n    (email: string, password: string): ThunkAction<Return, IAppStore, ExtraArgument, IRegisterActions> =>\r\n        async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IRegisterActions>, getStore: IGetStore) => {\r\n\r\n            dispatch(registerLoading(true));\r\n\r\n            try {\r\n                const data = await RegisterAPI.register(email, passwordCoding(password));\r\n\r\n                if (data.error) {\r\n                    dispatch(registerError(data.error));\r\n\r\n                } else {\r\n                    dispatch(registerSuccess(true));\r\n\r\n                    console.log('Neko Register Success!', data)\r\n                }\r\n            } catch (e) {\r\n                dispatch(registerError(e.message));\r\n\r\n                console.log('Neko Register Error!', e)\r\n            }\r\n        };\r\n","import React from 'react';\nimport RegisterContainer from \"./RegisterContainer\";\n\nconst RegisterPage: React.FC = () => {\n    return (\n        <RegisterContainer/>\n    );\n};\n\nexport default RegisterPage;\n","import React from 'react';\n\ninterface ForgotProps {\n    loading: boolean;\n    error: string;\n    success: boolean;\n\n    email: string;\n\n    forgotSetEmailCallback: (email: string) => void;\n\n    forgotCallback: () => void;\n}\n\nconst Forgot: React.FC<ForgotProps> = (\n    {\n        loading,\n        error,\n        success,\n\n        email,\n\n        forgotSetEmailCallback,\n\n        forgotCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            forgot\n\n            {loading\n                ? <div style={{color: 'orange'}}>loading...</div>\n                : error\n                    ? <div style={{color: 'red'}}>{error}</div>\n                    : success\n                        ? <div style={{color: 'lime'}}>Success!</div>\n                        : <div><br/></div>\n            }\n\n            <input value={email} onChange={e => forgotSetEmailCallback(e.currentTarget.value)}/>\n            <button onClick={forgotCallback}>Send email</button>\n        </div>\n    );\n};\n\nexport default Forgot;\n","export const FORGOT_LOADING = 'FORGOT/LOADING';\r\nexport const FORGOT_ERROR = 'FORGOT/ERROR';\r\nexport const FORGOT_SUCCESS = 'FORGOT/SUCCESS';\r\n\r\ninterface IForgotLoading {\r\n    type: typeof FORGOT_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface IForgotError {\r\n    type: typeof FORGOT_ERROR;\r\n    error: string;\r\n}\r\ninterface IForgotSuccess {\r\n    type: typeof FORGOT_SUCCESS;\r\n    success: boolean;\r\n}\r\n\r\nexport type IForgotActions = IForgotLoading | IForgotError | IForgotSuccess;\r\n\r\nexport const forgotLoading = (loading: boolean): IForgotLoading => ({\r\n    type: FORGOT_LOADING,\r\n    loading,\r\n});\r\nexport const forgotError = (error: string): IForgotError => ({\r\n    type: FORGOT_ERROR,\r\n    error,\r\n});\r\nexport const forgotSuccess = (success: boolean): IForgotSuccess => ({\r\n    type: FORGOT_SUCCESS,\r\n    success,\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport interface IForgotData {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const ForgotAPI = {\r\n    forgot: async (email: string) => {\r\n        const response = await instance.post<IForgotData>('/auth/forgot', {email});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\nimport Forgot from './Forgot';\nimport {forgotError, forgotSuccess} from \"../forgot-2-bll/forgotActions\";\nimport {forgot} from \"../forgot-2-bll/forgotThunks\";\nimport {emailValidator} from \"../../../features-2-helpers/emailValidator\";\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/main-1-ui/Routes\";\n\nconst ForgotContainer: React.FC = () => {\n    // redux\n    const {loading, error, success} = useSelector((store: IAppStore) => store.forgot);\n    const dispatch = useDispatch();\n\n    // local state\n    const [email, setEmail] = useState('test@emali.nya');\n\n    const [redirect, setRedirect] = useState(false);\n\n    // callbacks\n    const forgotCallback = () => {\n        if (emailValidator(email)) {\n            dispatch(forgot(email));\n        } else {\n            dispatch(forgotError('Email not valid!'));\n        }\n    };\n\n    // redirect logic\n    if (success) {\n        setTimeout(() => setRedirect(true), 500)\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(forgotSuccess(false))\n        }, 500);\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n\n    return (\n        <Forgot\n            loading={loading}\n            error={error}\n            success={success}\n\n            email={email}\n\n            forgotSetEmailCallback={setEmail}\n\n            forgotCallback={forgotCallback}\n        />\n    );\n};\n\nexport default ForgotContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/main-2-bll/store\";\r\nimport {forgotLoading, IForgotActions, forgotSuccess, forgotError} from \"./forgotActions\";\r\nimport {ForgotAPI} from \"../forgot-3-dal/ForgotAPI\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const forgot = (email: string): ThunkAction<Return, IAppStore, ExtraArgument, IForgotActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IForgotActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(forgotLoading(true));\r\n\r\n        try {\r\n            const data = await ForgotAPI.forgot(email);\r\n\r\n            if (data.error) {\r\n                dispatch(forgotError(data.error));\r\n\r\n            } else {\r\n                dispatch(forgotSuccess(true));\r\n\r\n                console.log('Neko Forgot Success!', data)\r\n            }\r\n        } catch (e) {\r\n            dispatch(forgotError(e.message));\r\n\r\n            console.log('Neko Forgot Error!', e)\r\n        }\r\n    };\r\n","import React from 'react';\nimport ForgotContainer from './ForgotContainer';\n\nconst ForgotPage: React.FC = () => {\n    return (\n        <ForgotContainer/>\n    );\n};\n\nexport default ForgotPage;\n","import React from 'react';\n\ninterface NekoProps {\n    loading: boolean;\n    error: string;\n\n    name: string;\n\n    logoutCallback: () => void;\n}\n\nconst Neko: React.FC<NekoProps> = (\n    {\n        loading,\n        error,\n\n        name,\n\n        logoutCallback,\n    }\n) => {\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            neko\n\n            {loading\n                ? <div style={{color: 'orange'}}>loading...</div>\n                : error\n                    ? <div style={{color: 'red'}}>{error}</div>\n                    : name\n                        ? <div style={{color: 'lime'}}>{name}</div>\n                        : <div><br/></div>\n            }\n\n            <button onClick={logoutCallback}>logout</button>\n        </div>\n    );\n};\n\nexport default Neko;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../../neko-1-main/main-2-bll/store\";\nimport Neko from \"./Neko\";\nimport {nekoSetName} from \"../neko-2-bll/nekoActions\";\nimport {Redirect} from \"react-router\";\nimport {getCookie, setCookie} from \"../../features-2-helpers/cookies\";\nimport {SIGN_IN_PATH} from \"../../../neko-1-main/main-1-ui/Routes\";\nimport {getMe} from \"../neko-2-bll/nekoThunks\";\n\nconst NekoContainer: React.FC = () => {\n    // redux\n    const {name, loading, error} = useSelector((store: IAppStore) => store.neko);\n    const dispatch = useDispatch();\n\n    // local state\n    const [show, setShow] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n\n    // useEffects\n    useEffect(() => {\n        dispatch(getMe());\n    }, []);\n    useEffect(() => {\n        if (!getCookie('token')) setRedirect(true);\n        else setShow(true);\n    }, [name]);\n\n    // callbacks\n    const logoutCallback = () => {\n        setCookie('token', '', -1000);\n        dispatch(nekoSetName(''));\n    };\n\n    // redirect logic\n    if (redirect) {\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n    if (!show) return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'orange',\n            }}\n        >\n            Loading...\n        </div>\n    );\n\n    return (\n        <Neko\n            loading={loading}\n            error={error}\n\n            name={name}\n\n            logoutCallback={logoutCallback}\n        />\n    );\n};\n\nexport default NekoContainer;\n","import React from 'react';\nimport NekoContainer from \"./NekoContainer\";\n\nconst NekoPage: React.FC = () => {\n    return (\n        <NekoContainer/>\n    );\n};\n\nexport default NekoPage;\n","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport SignInPage from '../../neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-1-ui/SignInPage';\nimport RegisterPage from '../../neko-2-features/features-1-authorization/authorization-2-register/register-1-ui/RegisterPage';\nimport ForgotPage from '../../neko-2-features/features-1-authorization/authorization-3-forgot/forgot-1-ui/ForgotPage';\nimport NekoPage from \"../../neko-2-features/features-3-neko/neko-1-ui/NekoPage\";\n\n// all project paths\nexport const SIGN_IN_PATH = '/sign-in';\nexport const REGISTER_PATH = '/register';\nexport const FORGOT_PATH = '/forgot';\n\nexport const NEKO_PATH = '/neko';\n\nconst Routes: React.FC = () => {\n    return (\n        <>\n            <Route exact path={'/'} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\n\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\n            <Route path={FORGOT_PATH} render={() => <ForgotPage/>}/>\n\n            <Route path={NEKO_PATH} render={() => <NekoPage/>}/>\n        </>\n    );\n};\n\nexport default Routes;\n","import React, {useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {FORGOT_PATH, NEKO_PATH, REGISTER_PATH, SIGN_IN_PATH} from './Routes';\n\nconst Header: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexFlow: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-around',\n                flexWrap: 'wrap',\n            }}\n        >\n            <button onClick={() => setShow(!show)}>{show ? 'hide dev header' : 'show dev header'}</button>\n\n            {show && <NavLink to={SIGN_IN_PATH}>sign-in</NavLink>}\n            {show && <NavLink to={REGISTER_PATH}>register</NavLink>}\n            {show && <NavLink to={FORGOT_PATH}>forgot</NavLink>}\n            {show && <NavLink to={NEKO_PATH}>neko</NavLink>}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\n// headers, routes, footers\nconst Main: React.FC = () => {\n    return (\n        <>\n            <Header/>\n\n            <Routes/>\n        </>\n    );\n};\n\nexport default Main;\n","export interface ISignInState {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n}\r\n\r\nexport const signInInitialState: ISignInState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false,\r\n};\r\n","export interface IRegisterState {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n}\r\n\r\nexport const registerInitialState: IRegisterState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false,\r\n};\r\n","export interface IForgotState {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n}\r\n\r\nexport const forgotInitialState: IForgotState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false,\r\n};\r\n","export interface INekoState {\r\n    loading: boolean;\r\n    error: string;\r\n\r\n    name: string;\r\n}\r\n\r\nexport const nekoInitialState: INekoState = {\r\n    loading: false,\r\n    error: '',\r\n\r\n    name: 'test name',\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport {signInReducer} from \"../../neko-2-features/features-1-authorization/authorization-1-sign-in/sign-in-2-bll/signInReducer\";\r\nimport {registerReducer} from \"../../neko-2-features/features-1-authorization/authorization-2-register/register-2-bll/registerReducer\";\r\nimport {forgotReducer} from \"../../neko-2-features/features-1-authorization/authorization-3-forgot/forgot-2-bll/forgotReducer\";\r\nimport {nekoReducer} from \"../../neko-2-features/features-3-neko/neko-2-bll/nekoReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n\r\n    neko: nekoReducer,\r\n\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type IAppStore = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import {signInInitialState} from \"./signInInitialState\";\r\nimport {\r\n    ISignInActions,\r\n    SIGN_IN_LOADING,\r\n    SIGN_IN_ERROR,\r\n    SIGN_IN_SUCCESS\r\n} from \"./signInActions\";\r\n\r\nexport const signInReducer = (state = signInInitialState, action: ISignInActions) => {\r\n    switch (action.type) {\r\n        case SIGN_IN_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case SIGN_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: '',\r\n                success: action.success,\r\n            }\r\n        }\r\n        case SIGN_IN_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error,\r\n                success: false,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {registerInitialState} from \"./registerInitialState\";\r\nimport {\r\n    IRegisterActions,\r\n    REGISTER_LOADING,\r\n    REGISTER_ERROR,\r\n    REGISTER_SUCCESS\r\n} from \"./registerActions\";\r\n\r\nexport const registerReducer = (state = registerInitialState, action: IRegisterActions) => {\r\n    switch (action.type) {\r\n        case REGISTER_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: '',\r\n                success: action.success,\r\n            }\r\n        }\r\n        case REGISTER_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error,\r\n                success: false,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {forgotInitialState} from \"./forgotInitialState\";\r\nimport {IForgotActions, FORGOT_LOADING, FORGOT_ERROR, FORGOT_SUCCESS} from \"./forgotActions\";\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: IForgotActions) => {\r\n    switch (action.type) {\r\n        case FORGOT_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case FORGOT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: '',\r\n                success: action.success,\r\n            }\r\n        }\r\n        case FORGOT_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error,\r\n                success: false,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {nekoInitialState} from \"./nekoInitialState\";\r\nimport {INekoActions, NEKO_ERROR, NEKO_LOADING, NEKO_SET_NAME} from \"./nekoActions\";\r\n\r\nexport const nekoReducer = (state = nekoInitialState, action: INekoActions) => {\r\n    switch (action.type) {\r\n        case NEKO_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n            }\r\n        }\r\n        case NEKO_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error,\r\n            }\r\n        }\r\n\r\n        case NEKO_SET_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                loading: false,\r\n                error: '',\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Main from \"./neko-1-main/main-1-ui/Main\";\nimport {Provider} from \"react-redux\";\nimport store from \"./neko-1-main/main-2-bll/store\";\n\n// add context\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}