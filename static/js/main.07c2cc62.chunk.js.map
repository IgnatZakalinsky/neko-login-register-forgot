{"version":3,"sources":["neko-2-sign-in/sign-in-1-ui/SignIn.tsx","neko-2-sign-in/sign-in-2-bll/signInActions.ts","base-url.ts","neko-2-sign-in/sign-in-3-dal/SignInAPI.ts","neko-5-helpers/passwordCoding.tsx","neko-6-neko/neko-2-bll/nekoActions.ts","neko-5-helpers/cookies.ts","neko-5-helpers/emailValidator.ts","neko-5-helpers/passwordValidator.ts","neko-6-neko/neko-3-dal/NekoAPI.ts","neko-6-neko/neko-2-bll/nekoThunks.ts","neko-2-sign-in/sign-in-1-ui/SignInContainer.tsx","neko-2-sign-in/sign-in-2-bll/signInThunks.ts","neko-2-sign-in/sign-in-1-ui/SignInPage.tsx","neko-3-register/register-1-ui/Register.tsx","neko-3-register/register-2-bll/registerActions.ts","neko-3-register/register-3-dal/RegisterAPI.ts","neko-3-register/register-1-ui/RegisterContainer.tsx","neko-3-register/register-2-bll/registerThunks.ts","neko-3-register/register-1-ui/RegisterPage.tsx","neko-4-forgot/forgot-1-ui/Forgot.tsx","neko-4-forgot/forgot-2-bll/forgotActions.ts","neko-4-forgot/forgot-3-dal/ForgotAPI.ts","neko-4-forgot/forgot-1-ui/ForgotContainer.tsx","neko-4-forgot/forgot-2-bll/forgotThunks.ts","neko-4-forgot/forgot-1-ui/ForgotPage.tsx","neko-6-neko/neko-1-ui/Neko.tsx","neko-6-neko/neko-1-ui/NekoContainer.tsx","neko-6-neko/neko-1-ui/NekoPage.tsx","neko-1-main/main-1-ui/Routes.tsx","neko-1-main/main-1-ui/Header.tsx","neko-1-main/main-1-ui/Main.tsx","neko-2-sign-in/sign-in-2-bll/signInInitialState.ts","neko-3-register/register-2-bll/registerInitialState.ts","neko-4-forgot/forgot-2-bll/forgotInitialState.ts","neko-6-neko/neko-2-bll/nekoInitialState.ts","neko-1-main/main-2-bll/store.ts","neko-2-sign-in/sign-in-2-bll/signInReducer.ts","neko-3-register/register-2-bll/registerReducer.ts","neko-4-forgot/forgot-2-bll/forgotReducer.ts","neko-6-neko/neko-2-bll/nekoReducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["SignIn","email","password","loading","success","error","rememberMe","signInRememberMeCallback","signInSetEmailCallback","signInSetPasswordCallback","signInCallback","JSON","stringify","style","height","display","flexFlow","alignItems","justifyContent","color","value","onChange","e","currentTarget","to","FORGOT_PATH","onClick","type","checked","REGISTER_PATH","signInSuccess","signInError","baseURL","instance","axios","create","SignInAPI","a","async","post","response","data","passwordCoding","f","c","length","String","fromCharCode","charCodeAt","nekoSetName","name","setCookie","age","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","reg","emailValidator","test","passwordValidator","NekoAPI","token","getMe","dispatch","getStore","console","log","message","SignInContainer","signInState","useSelector","store","signIn","useDispatch","useState","setEmail","setPassword","setRememberMe","useEffect","redirect","setRedirect","setTimeout","NEKO_PATH","SignInPage","Register","password2","registerSetEmailCallback","registerSetPasswordCallback","registerSetPasswordCallback2","registerCallback","registerSuccess","registerError","RegisterAPI","RegisterContainer","registerState","register","SIGN_IN_PATH","registerSetEmail","registerSetPassword","RegisterPage","Forgot","forgotSetEmailCallback","forgotCallback","forgotSuccess","forgotError","ForgotAPI","ForgotContainer","forgotState","forgot","forgotSetEmail","ForgotPage","Neko","logoutCallback","NekoContainer","nekoState","neko","show","setShow","NekoPage","START_GH_PAGES_PATH","Routes","exact","path","render","Header","Main","signInInitialState","registerInitialState","forgotInitialState","nekoInitialState","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","className","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07c2cc62.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {FORGOT_PATH, REGISTER_PATH} from \"../../neko-1-main/main-1-ui/Routes\";\n\ninterface SignInProps {\n    email: string;\n    password: string;\n    loading: boolean;\n    success: boolean;\n    error: string;\n    rememberMe: boolean;\n    signInRememberMeCallback: (saveMe: boolean) => void;\n    signInSetEmailCallback: (email: string) => void;\n    signInSetPasswordCallback: (password: string) => void;\n    signInCallback: () => void;\n}\n\nconst SignIn: React.FC<SignInProps> = (\n    {\n        email,\n        password,\n        loading,\n        success,\n        error,\n        rememberMe,\n        signInRememberMeCallback,\n        signInSetEmailCallback,\n        signInSetPasswordCallback,\n        signInCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            sign-in\n            {loading && <div style={{color: 'orange'}}>loading...</div>}\n            {success && <div style={{color: 'lime'}}>Success!</div>}\n            {error && <div style={{color: 'red'}}>{error}</div>}\n            <div>\n                <input value={email} onChange={e => signInSetEmailCallback(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <input value={password} onChange={e => signInSetPasswordCallback(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <NavLink to={FORGOT_PATH}>Forgot password?</NavLink>\n            </div>\n            <div>\n                <button onClick={signInCallback}>Sign In</button>\n            </div>\n            <div>\n                <input\n                    type={'checkbox'}\n                    checked={rememberMe}\n                    onChange={e => signInRememberMeCallback(e.currentTarget.checked)}\n                />\n                Remember Me\n            </div>\n            <div>\n                <NavLink to={REGISTER_PATH}>Registration</NavLink>\n            </div>\n        </div>\n    );\n};\n\nexport default SignIn;\n","export const SIGN_IN_LOADING = 'SIGN_IN/LOADING';\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN/SUCCESS';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN/ERROR';\r\n\r\ninterface ISignInLoading {\r\n    type: typeof SIGN_IN_LOADING;\r\n    loading: boolean;\r\n}\r\n\r\ninterface ISignInSuccess {\r\n    type: typeof SIGN_IN_SUCCESS;\r\n    success: boolean;\r\n}\r\ninterface ISignInError {\r\n    type: typeof SIGN_IN_ERROR;\r\n    error: string;\r\n}\r\n\r\nexport type ISignInActions =\r\n    ISignInLoading |\r\n    ISignInSuccess |\r\n    ISignInError;\r\n\r\nexport const signInLoading = (loading: boolean): ISignInLoading => ({\r\n    type: SIGN_IN_LOADING,\r\n    loading,\r\n});\r\n\r\nexport const signInSuccess = (success: boolean): ISignInSuccess => ({\r\n    type: SIGN_IN_SUCCESS,\r\n    success,\r\n});\r\nexport const signInError = (error: string): ISignInError => ({\r\n    type: SIGN_IN_ERROR,\r\n    error,\r\n});\r\n","export const baseURL = 'https://ancient-gorge-20298.herokuapp.com/';\r\n","import axios from 'axios';\r\nimport {IGetMeData} from \"../../neko-6-neko/neko-3-dal/NekoAPI\";\r\nimport {baseURL} from \"../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport const SignInAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<IGetMeData>('/auth/login', {email, password, rememberMe});\r\n        return response.data;\r\n    }\r\n};\r\n","export const passwordCoding = (password: string) => {\r\n    let f = '';\r\n    for (let c = 0; c < password.length; c++) {\r\n        f += String.fromCharCode(password.charCodeAt(c) ^ (1 + (password.length - c) % 32));\r\n    }\r\n    return f;\r\n};\r\n","export const NEKO_SET_NAME = 'NEKO/SET_NAME';\r\n\r\ninterface INekoSetName {\r\n    type: typeof NEKO_SET_NAME;\r\n    name: string;\r\n}\r\n\r\nexport type INekoActions = INekoSetName;\r\n\r\nexport const nekoSetName = (name: string): INekoSetName => ({\r\n    type: NEKO_SET_NAME,\r\n    name,\r\n});\r\n","export const setCookie = (name: string, value: string, age: number) => {\r\n    document.cookie = `${name}=${value};max-age=${age};path=/`;\r\n};\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n    const matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)'\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n};\r\n","const reg = /^[\\w]{1}[\\w-\\.]*@[\\w-]+\\.[a-z]{2,7}$/i;\r\n\r\nexport const emailValidator = (email: string): boolean => reg.test(email); // true - valid\r\n","export const passwordValidator = (password: string): boolean => password.length > 7; // true - valid\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport interface IGetMeData {\r\n    name: string;\r\n    token: string;\r\n    error: string;\r\n    success: boolean;\r\n}\r\n\r\nexport const NekoAPI = {\r\n    getMe: async (token: string) => {\r\n        const response = await instance.post<IGetMeData>('/auth/me', {token});\r\n        return response.data;\r\n    }\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\r\nimport {INekoActions, nekoSetName} from \"./nekoActions\";\r\nimport {NekoAPI} from \"../neko-3-dal/NekoAPI\";\r\nimport {ISignInActions, signInSuccess} from \"../../neko-2-sign-in/sign-in-2-bll/signInActions\";\r\nimport {getCookie, setCookie} from \"../../neko-5-helpers/cookies\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const getMe = (): ThunkAction<Return, IAppStore, ExtraArgument, INekoActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, INekoActions | ISignInActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(nekoSetName('Loading...'));\r\n        const token = getCookie('token') || '';\r\n\r\n        try {\r\n            const data = await NekoAPI.getMe(token);\r\n            if (data.error) {\r\n                dispatch(nekoSetName(data.error));\r\n                console.log('Neko Get Me Error!', data.error, token);\r\n                setCookie('token', '', -1000);\r\n            } else {\r\n                dispatch(nekoSetName(data.name));\r\n                setCookie('token', data.token, 60 * 60 * 48); // 2 days\r\n                dispatch(signInSuccess(true));\r\n\r\n                console.log('Neko Get Me Success!', data.name)\r\n            }\r\n        } catch (e) {\r\n            dispatch(nekoSetName(e.message));\r\n\r\n            console.log('Neko Get Me Error!', e)\r\n        }\r\n    };\r\n","import React, {useEffect, useState} from 'react';\nimport SignIn from \"./SignIn\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\nimport {\n    signInError, signInSuccess\n} from \"../sign-in-2-bll/signInActions\";\nimport {signIn} from \"../sign-in-2-bll/signInThunks\";\nimport {emailValidator} from '../../neko-5-helpers/emailValidator';\nimport {passwordValidator} from \"../../neko-5-helpers/passwordValidator\";\nimport {getMe} from \"../../neko-6-neko/neko-2-bll/nekoThunks\";\nimport {Redirect} from \"react-router\";\nimport {NEKO_PATH} from \"../../neko-1-main/main-1-ui/Routes\";\n\nconst SignInContainer: React.FC = () => {\n    const signInState = useSelector((store: IAppStore) => store.signIn);\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState('test@emali.nya');\n    const [password, setPassword] = useState('test password nya');\n    const [rememberMe, setRememberMe] = useState(false);\n\n    const signInCallback = () => {\n        if (!emailValidator(email)) {\n            dispatch(signInError('Email not valid!'));\n        } else if (!passwordValidator(password)) {\n            dispatch(signInError('Password not valid! must be more than 7 characters...'));\n        } else {\n            dispatch(signIn(email, password, rememberMe));\n        }\n    };\n\n    useEffect(() => {\n        dispatch(getMe());\n    }, []);\n\n    const [redirect, setRedirect] = useState(false);\n    if (signInState.success) {\n        setTimeout(() => setRedirect(true), 500)\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(signInSuccess(false))\n        }, 500);\n        return <Redirect to={NEKO_PATH}/>;\n    }\n\n    return (\n        <SignIn\n            email={email}\n            password={password}\n            loading={signInState.loading}\n            success={signInState.success}\n            error={signInState.error}\n            rememberMe={rememberMe}\n            signInRememberMeCallback={setRememberMe}\n            signInSetEmailCallback={setEmail}\n            signInSetPasswordCallback={setPassword}\n            signInCallback={signInCallback}\n        />\n    );\n};\n\nexport default SignInContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\r\nimport {ISignInActions, signInError, signInLoading, signInSuccess} from \"./signInActions\";\r\nimport {SignInAPI} from \"../sign-in-3-dal/SignInAPI\";\r\nimport {passwordCoding} from \"../../neko-5-helpers/passwordCoding\";\r\nimport {INekoActions, nekoSetName} from \"../../neko-6-neko/neko-2-bll/nekoActions\";\r\nimport {setCookie} from \"../../neko-5-helpers/cookies\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const signIn = (email: string, password: string, rememberMe: boolean): ThunkAction<Return, IAppStore, ExtraArgument, ISignInActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, ISignInActions | INekoActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(signInLoading(true));\r\n\r\n        try {\r\n            const data = await SignInAPI.signIn(email, passwordCoding(password), rememberMe);\r\n\r\n            if (data.error) {\r\n                dispatch(signInError(data.error));\r\n            } else {\r\n                dispatch(nekoSetName(data.name));\r\n                setCookie('token', data.token, 60 * 60 * 48); // 2 days\r\n                dispatch(signInSuccess(true));\r\n\r\n                console.log('Neko Sign-in Success!', data)\r\n            }\r\n        } catch (e) {\r\n            dispatch(signInError(e.message));\r\n\r\n            console.log('Neko Sign-in Error!', e)\r\n        }\r\n\r\n    };\r\n","import React from 'react';\nimport SignInContainer from \"./SignInContainer\";\n\nconst SignInPage: React.FC = () => {\n    return (\n        <SignInContainer/>\n    );\n};\n\nexport default SignInPage;\n","import React from 'react';\n\ninterface RegisterProps {\n    email: string;\n    password: string;\n    password2: string;\n    loading: boolean;\n    success: boolean;\n    error: string;\n    registerSetEmailCallback: (email: string) => void;\n    registerSetPasswordCallback: (password: string) => void;\n    registerSetPasswordCallback2: (password: string) => void;\n    registerCallback: () => void;\n}\n\nconst Register: React.FC<RegisterProps> = (\n    {\n        email,\n        password,\n        password2,\n        loading,\n        success,\n        error,\n        registerSetEmailCallback,\n        registerSetPasswordCallback,\n        registerSetPasswordCallback2,\n        registerCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            register\n            {loading && <div style={{color: 'orange'}}>loading...</div>}\n            {success && <div style={{color: 'lime'}}>Success!</div>}\n            {error && <div style={{color: 'red'}}>{error}</div>}\n            <div>\n                <input value={email} onChange={e => registerSetEmailCallback(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <input value={password} onChange={e => registerSetPasswordCallback(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <input value={password2} onChange={e => registerSetPasswordCallback2(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <button onClick={registerCallback}>Register</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;\n","export const REGISTER_SET_EMAIL = 'REGISTER/SET_EMAIL';\r\nexport const REGISTER_SET_PASSWORD = 'REGISTER/SET_PASSWORD';\r\nexport const REGISTER_SET_PASSWORD_2 = 'REGISTER/SET_PASSWORD_2';\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\n\r\ninterface IRegisterSetEmail {\r\n    type: typeof REGISTER_SET_EMAIL;\r\n    email: string;\r\n}\r\ninterface IRegisterSetPassword {\r\n    type: typeof REGISTER_SET_PASSWORD;\r\n    password: string;\r\n}\r\ninterface IRegisterSetPassword2 {\r\n    type: typeof REGISTER_SET_PASSWORD_2;\r\n    password2: string;\r\n}\r\n\r\ninterface IRegisterLoading {\r\n    type: typeof REGISTER_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface IRegisterSuccess {\r\n    type: typeof REGISTER_SUCCESS;\r\n    success: boolean;\r\n}\r\ninterface IRegisterError {\r\n    type: typeof REGISTER_ERROR;\r\n    error: string;\r\n}\r\n\r\nexport type IRegisterActions =\r\n    IRegisterSetEmail |\r\n    IRegisterSetPassword |\r\n    IRegisterSetPassword2 |\r\n    IRegisterLoading |\r\n    IRegisterSuccess |\r\n    IRegisterError;\r\n\r\nexport const registerSetEmail = (email: string): IRegisterSetEmail => ({\r\n    type: REGISTER_SET_EMAIL,\r\n    email,\r\n});\r\nexport const registerSetPassword = (password: string): IRegisterSetPassword => ({\r\n    type: REGISTER_SET_PASSWORD,\r\n    password,\r\n});\r\nexport const registerSetPassword2 = (password2: string): IRegisterSetPassword2 => ({\r\n    type: REGISTER_SET_PASSWORD_2,\r\n    password2,\r\n});\r\n\r\nexport const registerLoading = (loading: boolean): IRegisterLoading => ({\r\n    type: REGISTER_LOADING,\r\n    loading,\r\n});\r\nexport const registerSuccess = (success: boolean): IRegisterSuccess => ({\r\n    type: REGISTER_SUCCESS,\r\n    success,\r\n});\r\nexport const registerError = (error: string): IRegisterError => ({\r\n    type: REGISTER_ERROR,\r\n    error,\r\n});\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport const RegisterAPI = {\r\n    register: async (email: string, password: string) => {\r\n        const response = await instance.post('/auth/register', {email, password});\r\n        return response.data;\r\n    }\r\n};\r\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\nimport Register from './Register';\nimport {\n    registerError,\n    registerSetEmail,\n    registerSetPassword,\n    registerSetPassword2, registerSuccess\n} from \"../register-2-bll/registerActions\";\nimport {register} from '../register-2-bll/registerThunks';\nimport {emailValidator} from \"../../neko-5-helpers/emailValidator\";\nimport {passwordValidator} from \"../../neko-5-helpers/passwordValidator\";\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../neko-1-main/main-1-ui/Routes\";\n\nconst RegisterContainer: React.FC = () => {\n    const registerState = useSelector((store: IAppStore) => store.register);\n    const dispatch = useDispatch();\n    const registerSetEmailCallback = (email: string) => dispatch(registerSetEmail(email));\n    const registerSetPasswordCallback = (password: string) => dispatch(registerSetPassword(password));\n    const registerSetPasswordCallback2 = (password: string) => dispatch(registerSetPassword2(password));\n    const registerCallback = () => {\n        if (!emailValidator(registerState.email)) {\n            dispatch(registerError('Email not valid!'));\n        } else if (!passwordValidator(registerState.password)) {\n            dispatch(registerError('Password not valid! must be more than 7 characters...'));\n        } else if (registerState.password !== registerState.password2) {\n            dispatch(registerError('Passwords do not match!'));\n        } else {\n            dispatch(register());\n        }\n    };\n\n    const [redirect, setRedirect] = useState(false);\n    if (registerState.success) {\n        setTimeout(() => setRedirect(true), 500)\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(registerSuccess(false))\n        }, 500);\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n\n    return (\n        <Register\n            email={registerState.email}\n            password={registerState.password}\n            password2={registerState.password2}\n            loading={registerState.loading}\n            success={registerState.success}\n            error={registerState.error}\n            registerSetEmailCallback={registerSetEmailCallback}\n            registerSetPasswordCallback={registerSetPasswordCallback}\n            registerSetPasswordCallback2={registerSetPasswordCallback2}\n            registerCallback={registerCallback}\n        />\n    );\n};\n\nexport default RegisterContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\r\nimport {IRegisterActions, registerError, registerLoading, registerSuccess} from \"./registerActions\";\r\nimport {RegisterAPI} from \"../register-3-dal/RegisterAPI\";\r\nimport {passwordCoding} from \"../../neko-5-helpers/passwordCoding\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const register = (): ThunkAction<Return, IAppStore, ExtraArgument, IRegisterActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IRegisterActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(registerLoading(true));\r\n        const {email, password} = getStore().register;\r\n\r\n        try {\r\n            const data = await RegisterAPI.register(email, passwordCoding(password));\r\n            if (data.error) {\r\n                dispatch(registerError(data.error));\r\n            } else {\r\n                dispatch(registerSuccess(true));\r\n\r\n                console.log('Neko Register Success!', data)\r\n            }\r\n        } catch (e) {\r\n            dispatch(registerError(e.message));\r\n\r\n            console.log('Neko Register Error!', e)\r\n        }\r\n    };\r\n","import React from 'react';\nimport RegisterContainer from \"./RegisterContainer\";\n\nconst RegisterPage: React.FC = () => {\n    return (\n        <RegisterContainer/>\n    );\n};\n\nexport default RegisterPage;\n","import React from 'react';\n\ninterface ForgotProps {\n    email: string;\n    loading: boolean;\n    success: boolean;\n    error: string;\n    forgotSetEmailCallback: (email: string) => void;\n    forgotCallback: () => void;\n}\n\nconst Forgot: React.FC<ForgotProps> = (\n    {\n        email,\n        loading,\n        success,\n        error,\n        forgotSetEmailCallback,\n        forgotCallback\n    }\n) => {\n    if (typeof error !== 'string') error = JSON.stringify(error);\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            forgot\n            {loading && <div style={{color: 'orange'}}>loading...</div>}\n            {success && <div style={{color: 'lime'}}>Success!</div>}\n            {error && <div style={{color: 'red'}}>{error}</div>}\n            <div>\n                <input value={email} onChange={e => forgotSetEmailCallback(e.currentTarget.value)}/>\n            </div>\n            <div>\n                <button onClick={forgotCallback}>Send email</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Forgot;\n","export const FORGOT_SET_EMAIL = 'FORGOT/SET_EMAIL';\r\nexport const FORGOT_LOADING = 'FORGOT/LOADING';\r\nexport const FORGOT_SUCCESS = 'FORGOT/SUCCESS';\r\nexport const FORGOT_ERROR = 'FORGOT/ERROR';\r\n\r\ninterface IForgotSetEmail {\r\n    type: typeof FORGOT_SET_EMAIL;\r\n    email: string;\r\n}\r\n\r\ninterface IForgotLoading {\r\n    type: typeof FORGOT_LOADING;\r\n    loading: boolean;\r\n}\r\ninterface IForgotSuccess {\r\n    type: typeof FORGOT_SUCCESS;\r\n    success: boolean;\r\n}\r\ninterface IForgotError {\r\n    type: typeof FORGOT_ERROR;\r\n    error: string;\r\n}\r\n\r\nexport type IForgotActions = IForgotSetEmail | IForgotLoading | IForgotSuccess | IForgotError;\r\n\r\nexport const forgotSetEmail = (email: string): IForgotSetEmail => ({\r\n    type: FORGOT_SET_EMAIL,\r\n    email,\r\n});\r\n\r\nexport const forgotLoading = (loading: boolean): IForgotLoading => ({\r\n    type: FORGOT_LOADING,\r\n    loading,\r\n});\r\nexport const forgotSuccess = (success: boolean): IForgotSuccess => ({\r\n    type: FORGOT_SUCCESS,\r\n    success,\r\n});\r\nexport const forgotError = (error: string): IForgotError => ({\r\n    type: FORGOT_ERROR,\r\n    error,\r\n});\r\n","import axios from 'axios';\r\nimport {baseURL} from \"../../base-url\";\r\n\r\nconst instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport const ForgotAPI = {\r\n    forgot: async (email: string) => {\r\n        const response = await instance.post('/auth/forgot', {email});\r\n        return response.data;\r\n    }\r\n};\r\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\nimport Forgot from './Forgot';\nimport {forgotError, forgotSetEmail, forgotSuccess} from \"../forgot-2-bll/forgotActions\";\nimport {forgot} from \"../forgot-2-bll/forgotThunks\";\nimport {emailValidator} from \"../../neko-5-helpers/emailValidator\";\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../neko-1-main/main-1-ui/Routes\";\n\nconst ForgotContainer: React.FC = () => {\n    const forgotState = useSelector((store: IAppStore) => store.forgot);\n    const dispatch = useDispatch();\n    const forgotSetEmailCallback = (email: string) => dispatch(forgotSetEmail(email));\n    const forgotCallback = () => {\n        if (emailValidator(forgotState.email)) {\n            dispatch(forgot());\n        } else {\n            dispatch(forgotError('Email not valid!'));\n        }\n    };\n\n    const [redirect, setRedirect] = useState(false);\n    if (forgotState.success) {\n        setTimeout(() => setRedirect(true), 500)\n    }\n    if (redirect) {\n        setTimeout(() => {\n            dispatch(forgotSuccess(false))\n        }, 500);\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n\n    return (\n        <Forgot\n            email={forgotState.email}\n            loading={forgotState.loading}\n            success={forgotState.success}\n            error={forgotState.error}\n            forgotSetEmailCallback={forgotSetEmailCallback}\n            forgotCallback={forgotCallback}\n        />\n    );\n};\n\nexport default ForgotContainer;\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\r\nimport {forgotLoading, IForgotActions, forgotSuccess, forgotError} from \"./forgotActions\";\r\nimport {ForgotAPI} from \"../forgot-3-dal/ForgotAPI\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const forgot = (): ThunkAction<Return, IAppStore, ExtraArgument, IForgotActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IForgotActions>, getStore: IGetStore) => {\r\n\r\n        dispatch(forgotLoading(true));\r\n        const {email} = getStore().forgot;\r\n\r\n        try {\r\n            const data = await ForgotAPI.forgot(email);\r\n            if (data.error) {\r\n                dispatch(forgotError(data.error));\r\n            } else {\r\n                dispatch(forgotSuccess(true));\r\n\r\n                console.log('Neko Forgot Success!', data)\r\n            }\r\n        } catch (e) {\r\n            dispatch(forgotError(e.message));\r\n\r\n            console.log('Neko Forgot Error!', e)\r\n        }\r\n    };\r\n","import React from 'react';\nimport ForgotContainer from './ForgotContainer';\n\nconst ForgotPage: React.FC = () => {\n    return (\n        <ForgotContainer/>\n    );\n};\n\nexport default ForgotPage;\n","import React from 'react';\n\ninterface NekoProps {\n    name: string;\n    logoutCallback: () => void;\n}\n\nconst Neko: React.FC<NekoProps> = (\n    {\n        name,\n        logoutCallback,\n    }\n) => {\n\n    return (\n        <div\n            style={{\n                height: '80vh',\n                display: 'flex',\n                flexFlow: 'column',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            neko\n            {name && <div style={{color: 'lime'}}>{name}</div>}\n            <div>\n                <button onClick={logoutCallback}>logout</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Neko;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppStore} from \"../../neko-1-main/main-2-bll/store\";\nimport Neko from \"./Neko\";\nimport {nekoSetName} from \"../neko-2-bll/nekoActions\";\nimport {Redirect} from \"react-router\";\nimport {getCookie, setCookie} from \"../../neko-5-helpers/cookies\";\nimport {SIGN_IN_PATH} from \"../../neko-1-main/main-1-ui/Routes\";\nimport {getMe} from \"../neko-2-bll/nekoThunks\";\n\nconst NekoContainer: React.FC = () => {\n    const nekoState = useSelector((store: IAppStore) => store.neko);\n    const dispatch = useDispatch();\n    const logoutCallback = () => {\n        setCookie('token', '', -1000);\n        dispatch(nekoSetName(''));\n    };\n\n    useEffect(() => {\n        dispatch(getMe());\n    }, []);\n\n    const [redirect, setRedirect] = useState(false);\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n        if (!getCookie('token')) setRedirect(true);\n        else setShow(true);\n    }, [nekoState]);\n    if (redirect) {\n        return <Redirect to={SIGN_IN_PATH}/>;\n    }\n    if (!show) return <div>Loading...</div>;\n\n    return (\n        <Neko\n            name={nekoState.name}\n            logoutCallback={logoutCallback}\n        />\n    );\n};\n\nexport default NekoContainer;\n","import React from 'react';\nimport NekoContainer from \"./NekoContainer\";\n\nconst NekoPage: React.FC = () => {\n    return (\n        <NekoContainer/>\n    );\n};\n\nexport default NekoPage;\n","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport SignInPage from '../../neko-2-sign-in/sign-in-1-ui/SignInPage';\nimport RegisterPage from '../../neko-3-register/register-1-ui/RegisterPage';\nimport ForgotPage from '../../neko-4-forgot/forgot-1-ui/ForgotPage';\nimport NekoPage from \"../../neko-6-neko/neko-1-ui/NekoPage\";\n\nexport const START_GH_PAGES_PATH = '/neko-login-register-forgot';\nexport const SIGN_IN_PATH = START_GH_PAGES_PATH + '/sign-in';\nexport const REGISTER_PATH = START_GH_PAGES_PATH + '/register';\nexport const FORGOT_PATH = START_GH_PAGES_PATH + '/forgot';\nexport const NEKO_PATH = START_GH_PAGES_PATH + '/neko';\n\nconst Routes: React.FC = () => {\n    return (\n        <div>\n            <Route exact path={START_GH_PAGES_PATH} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\n\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\n            <Route path={FORGOT_PATH} render={() => <ForgotPage/>}/>\n\n            <Route path={NEKO_PATH} render={() => <NekoPage/>}/>\n        </div>\n    );\n};\n\nexport default Routes;\n","import React, {useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {FORGOT_PATH, NEKO_PATH, REGISTER_PATH, SIGN_IN_PATH} from './Routes';\nimport {setCookie} from \"../../neko-5-helpers/cookies\";\n\nconst Header: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexFlow: 'row',\n                // flexGrow: 1,\n                alignItems: 'center',\n                justifyContent: 'space-around'\n            }}\n        >\n            <button onClick={() => setShow(!show)}>{show ? 'hide dev header' : 'show dev header'}</button>\n            {show && <NavLink to={SIGN_IN_PATH}>sign-in</NavLink>}\n            {show && <NavLink to={REGISTER_PATH}>register</NavLink>}\n            {show && <NavLink to={FORGOT_PATH}>forgot</NavLink>}\n            {show && <NavLink to={NEKO_PATH}>neko</NavLink>}\n            {show && <button onClick={() => setCookie('token', 'xxx', 60 * 60 * 48)}>add token</button>}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\n// header and routes\nconst Main: React.FC = () => {\n    return (\n        <div>\n            <Header/>\n\n            <Routes/>\n        </div>\n    );\n};\n\nexport default Main;\n","export interface ISignInState {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const signInInitialState: ISignInState = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export interface IRegisterState {\r\n    email: string;\r\n    password: string;\r\n    password2: string;\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const registerInitialState: IRegisterState = {\r\n    email: 'test@email.com',\r\n    password: 'test password',\r\n    password2: 'test password2',\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export interface IForgotState {\r\n    email: string;\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const forgotInitialState: IForgotState = {\r\n    email: 'test@email.com',\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export interface INekoState {\r\n    name: string;\r\n}\r\n\r\nexport const nekoInitialState: INekoState = {\r\n    name: 'test name',\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport {signInReducer} from \"../../neko-2-sign-in/sign-in-2-bll/signInReducer\";\r\nimport {registerReducer} from \"../../neko-3-register/register-2-bll/registerReducer\";\r\nimport {forgotReducer} from \"../../neko-4-forgot/forgot-2-bll/forgotReducer\";\r\nimport {nekoReducer} from \"../../neko-6-neko/neko-2-bll/nekoReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    neko: nekoReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type IAppStore = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import {signInInitialState} from \"./signInInitialState\";\r\nimport {\r\n    ISignInActions, SIGN_IN_ERROR,\r\n    SIGN_IN_LOADING,\r\n    SIGN_IN_SUCCESS\r\n} from \"./signInActions\";\r\n\r\nexport const signInReducer = (state = signInInitialState, action: ISignInActions) => {\r\n    switch (action.type) {\r\n        case SIGN_IN_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case SIGN_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: action.success,\r\n                error: '',\r\n            }\r\n        }\r\n        case SIGN_IN_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.error,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {registerInitialState} from \"./registerInitialState\";\r\nimport {\r\n    IRegisterActions, REGISTER_ERROR,\r\n    REGISTER_LOADING,\r\n    REGISTER_SET_EMAIL,\r\n    REGISTER_SET_PASSWORD,\r\n    REGISTER_SET_PASSWORD_2, REGISTER_SUCCESS\r\n} from \"./registerActions\";\r\n\r\nexport const registerReducer = (state = registerInitialState, action: IRegisterActions) => {\r\n    switch (action.type) {\r\n        case REGISTER_SET_EMAIL: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case REGISTER_SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case REGISTER_SET_PASSWORD_2: {\r\n            return {\r\n                ...state,\r\n                password2: action.password2,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case REGISTER_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: action.success,\r\n                error: '',\r\n            }\r\n        }\r\n        case REGISTER_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.error,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {forgotInitialState} from \"./forgotInitialState\";\r\nimport {FORGOT_LOADING, FORGOT_SET_EMAIL, FORGOT_SUCCESS, IForgotActions, FORGOT_ERROR} from \"./forgotActions\";\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: IForgotActions) => {\r\n    switch (action.type) {\r\n        case FORGOT_SET_EMAIL: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case FORGOT_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: '',\r\n                success: false,\r\n            }\r\n        }\r\n        case FORGOT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: action.success,\r\n                error: '',\r\n            }\r\n        }\r\n        case FORGOT_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.error,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {nekoInitialState} from \"./nekoInitialState\";\r\nimport {INekoActions, NEKO_SET_NAME} from \"./nekoActions\";\r\n\r\nexport const nekoReducer = (state = nekoInitialState, action: INekoActions) => {\r\n    switch (action.type) {\r\n        case NEKO_SET_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Main from \"./neko-1-main/main-1-ui/Main\";\nimport {Provider} from \"react-redux\";\nimport store from \"./neko-1-main/main-2-bll/store\";\n\n// add context\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}